from filters import IsUser
from aiogram.types import Message, CallbackQuery
from aiogram.dispatcher import FSMContext
from aiogram.types.chat import ChatActions
from aiogram.types import ReplyKeyboardMarkup

from loader import db, dp, bot
from .menu import cart
from keyboards.inline.products_from_cart import product_markup
from keyboards.inline.products_from_catalog import product_cb


@dp.message_handler(IsUser(), text=cart)
async def process_cart(message: Message, state: FSMContext):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã"""

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–∑–∏—Ü–∏–π –≤ –∫–æ—Ä–∑–∏–Ω–µ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cart_data = db.fetchall(
        'SELECT * FROM cart WHERE cid=?', (message.chat.id,))

    # –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if len(cart_data) == 0:
        await message.answer('–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.')

    else:

        await bot.send_chat_action(message.chat.id, ChatActions.TYPING)

        # –ù–∞–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        async with state.proxy() as data:
            data['products'] = {}

        # –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ä–∞–≤–Ω—è–µ—Ç—Å—è –Ω—É–ª—é
        order_cost = 0

        # –û–±—Ö–æ–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã. –ù–∞–º –Ω—É–∂–Ω—ã –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ –∏ –µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        for _, idx, count_in_cart in cart_data:

            # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
            product = db.fetchone('SELECT * FROM products WHERE idx=?', (idx,))

            # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–∞ —É–∂–µ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –Ω–µ—Ç, –∑–Ω–∞—á–∏—Ç –Ω—É–∂–Ω–æ –µ–≥–æ —É–¥–∞–ª–∏—Ç—å –∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
            if product is None:
                db.query('DELETE FROM cart WHERE idx=?', (idx,))

            else:
                # –†–∞—Å–∫—Ä–æ–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—ä–µ–∫—Ç–∞-—Ç–æ–≤–∞—Ä–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞–∑–≤–∞–Ω–∏–µ, –æ–ø–∏—Å–∞–Ω–∏–µ, —Ñ–æ—Ç–æ, —Ü–µ–Ω–∞
                _, title, body, image, price, _ = product

                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞
                order_cost += price

                # –î–æ–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞. –ö–ª—é—á–æ–º –±—É–¥–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞,
                # –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äì —Å–ø–∏—Å–æ–∫ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ç–æ–≤–∞—Ä–∞
                async with state.proxy() as data:
                    data['products'][idx] = [title, price, count_in_cart]

                # –ë–µ—Ä–µ–º –Ω–∞—à –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–º–µ—Ç–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
                markup = product_markup(idx, count_in_cart)
                text = f'<b>{title}</b>\n\n{body}\n\n–¶–µ–Ω–∞: {price}‚ÇΩ.'

                # –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç
                await message.answer_photo(photo=image,
                                           caption=text,
                                           reply_markup=markup)

        # –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º, —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ –Ω–µ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é
        if order_cost != 0:
            markup = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
            markup.add('üì¶ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')

            await message.answer('–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é?',
                                 reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤
@dp.callback_query_handler(IsUser(), product_cb.filter(action='count'))
@dp.callback_query_handler(IsUser(), product_cb.filter(action='increase'))
@dp.callback_query_handler(IsUser(), product_cb.filter(action='decrease'))
async def product_callback_handler(query: CallbackQuery, callback_data: dict,
                                   state: FSMContext):
    """–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã"""

    # –ò–∑ —Å–ª–æ–≤–∞—Ä—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ –∏ —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
    idx = callback_data['id']
    action = callback_data['action']

    # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ –Ω–µ—Ç, —Ç.–µ. –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –ø—Ä–æ—Å—Ç–æ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è process_cart()
    # –∏ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω–µ. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –º—ã —É–≤–∏–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
    if 'count' == action:
        async with state.proxy() as data:
            if 'products' not in data.keys():
                await process_cart(query.message, state)
            else:
                await query.answer('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ - ' + data['products'][idx][2])

    else:

        async with state.proxy() as data:

            if 'products' not in data.keys():

                await process_cart(query.message, state)

            else:
                # –ï—Å–ª–∏ –∂–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç, –º—ã –∏–ª–∏ —É–≤–µ–ª–∏—á–∏–º, –∏–ª–∏ —É–º–µ–Ω—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                data['products'][idx][2] += 1 if 'increase' == action else -1
                # –£ –Ω–∞—Å –±—É–¥–µ—Ç –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                count_in_cart = data['products'][idx][2]

                # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–≤–Ω–æ –Ω—É–ª—é, —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–æ—Å—Ç–æ –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å
                if count_in_cart == 0:
                    db.query('''DELETE FROM cart
                    WHERE cid = ? AND idx = ?''', (query.message.chat.id, idx))
                    await query.message.delete()

                else:

                    # –ò–Ω–∞—á–µ –º—ã –æ–±–Ω–æ–≤–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç—Ä–∞–∑–∏–º –≤ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞
                    db.query('''UPDATE cart 
                    SET quantity = ? 
                    WHERE cid = ? AND idx = ?''',
                             (count_in_cart, query.message.chat.id, idx))

                    await query.message.edit_reply_markup(
                        product_markup(idx, count_in_cart))
