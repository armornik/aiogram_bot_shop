# ContentType - –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, ContentType
# –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
from aiogram.types import ReplyKeyboardRemove
# ¬´–∫–æ–ª–ª–±—ç–∫–∏¬ª - —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã, —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
from aiogram.utils.callback_data import CallbackData
from aiogram.types import CallbackQuery
from hashlib import md5
from aiogram.dispatcher import FSMContext
from aiogram.types.chat import ChatActions


from states import CategoryState, ProductState
from loader import dp, db, bot
from filters import IsAdmin
from handlers.user.menu import settings
from keyboards.default.markups import *


# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –∫–æ–ª–ª–±–µ–∫ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –¥–∞–ª—å—à–µ –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ
# –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ category —ç—Ç–æ –ø—Ä–µ—Ñ–∏–∫—Å, –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É—é—â–∏–π –Ω–∞—à –∫–æ–ª–ª–±–µ–∫. –û–±—ã—á–Ω–æ —ç—Ç–æ—Ç –ø—Ä–µ—Ñ–∏–∫—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è,
# —Ç–æ–≥–æ, —á—Ç–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å –∫–∞–∫–æ–π-—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π. –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ–¥–∏–Ω –ø—Ä–µ—Ñ–∏–∫—Å,
# –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤ –¥—Ä—É–≥–æ–π.
# –ü–æ —ç—Ç–æ–º—É —à–∞–±–ª–æ–Ω—É –º—ã –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ (¬´–∫–æ–ª–ª–±—ç–∫-–¥–∞–Ω–Ω—ã–µ¬ª). –ò—Ç–∞–∫, CallbackData —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π
# —Ñ–∞–±—Ä–∏–∫–∞-–∫–ª–∞—Å—Å, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –Ω–∞–º —Å–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã –±—É–¥–µ–º –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–ª–±—ç–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞,
# —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä,
# –ø–æ id –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—É—á–∞—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –Ω–µ–µ.
# action - –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –¥—Ä—É–≥–æ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
category_cb = CallbackData('category', 'id', 'action')

# ¬´–ö–æ–ª–ª–±–µ–∫¬ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
product_cb = CallbackData('product', 'id', 'action')

cancel_message = 'üö´ –û—Ç–º–µ–Ω–∏—Ç—å'
add_product = '‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'
delete_category = 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é'
back_message = 'üëà –ù–∞–∑–∞–¥'
all_right_message = '‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ'


# text=settings —Ç–∞ –∫–Ω–æ–ø–∫–∞, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@dp.message_handler(IsAdmin(), text=settings)
async def process_settings(message: Message):

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    markup = InlineKeyboardMarkup()

    # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ
    for idx, title in db.fetchall('SELECT * FROM categories'):

        # –î–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Äì —ç—Ç–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        # –∏ —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è. –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º—ã –±—É–¥–µ–º –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        # –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –¢.–∫. –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –µ—Å—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–æ –Ω–µ–º—É
        # –±—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
        markup.add(InlineKeyboardButton(
            title, callback_data=category_cb.new(id=idx, action='view')))

    # –†–∞–∑–º–µ—â–∞–µ–º –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –ü–æ —Å—É—Ç–∏ –∫–æ–ª–ª–±—ç–∫–¥–∞–Ω–Ω—ã–µ –∑–¥–µ—Å—å –≤–µ–¥—É—Ç –Ω–∞—Å –∫ –∑–∞–ø—É—Å–∫—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    # –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –≠—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ç–æ, –∫–∞–∫ –≤ Django-—à–∞–±–ª–æ–Ω–∞—Ö –º—ã –¥–æ–±–∞–≤–ª—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ
    # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏. –î–∞–ª–µ–µ –Ω–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–ª—è —Å–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ —É–∫–∞–∑–∞—Ç—å, —á—Ç–æ –æ–Ω –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö
    # –¥–∞–Ω–Ω—ã—Ö add_category, —Ç.–µ. –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    markup.add(InlineKeyboardButton(
        '+ –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='add_category'))

    # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–µ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞–¥–ø–∏—Å—å –∏ –±–ª–æ–∫ –∫–Ω–æ–ø–æ–∫, –≥–¥–µ –∫–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–ª—é—Å –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è
    # –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    await message.answer('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', reply_markup=markup)


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
@dp.callback_query_handler(IsAdmin(), text='add_category')
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞
async def add_category_callback_handler(query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ (–∑–∞–ø—Ä–æ—Å–∞), –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø—Ä–∏–≤—è–∑–∞–ª–∏ –∫ –∫–Ω–æ–ø–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    # –ß–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—É—á–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
    await query.message.delete()
    # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    await query.message.answer('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏?')
    # –ê–¥–º–∏–Ω –≤–≤–µ–¥–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –∞ –º—ã —É—Å—Ç–∞–Ω–æ–≤–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await CategoryState.title.set()


# –ú—ã –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è ‚Äì –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@dp.message_handler(IsAdmin(), state=CategoryState.title)
async def set_category_title_handler(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""

    # –¢.–∫. –∞–¥–º–∏–Ω –≤–≤–µ–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Ç.–µ. –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    category = message.text
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±—É–¥–µ—Ç –µ–µ –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    idx = md5(category.encode('utf-8')).hexdigest()
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø–∏—Å—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db.query('INSERT INTO categories VALUES (?, ?)', (idx, category))

    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏). –í—ã–∫–ª—é—á–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.finish()
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    await process_settings(message)


# –º–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π, –≥–¥–µ –∫–∞–∂–¥—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç
# –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –ø—Ä–æ–¥—É–∫—Ç—É –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async def show_products(m, products, category_idx):
    """"–û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å–ø–µ—á–∏—Ç –≤—ã–≤–æ–¥ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    # –í–∫–ª—é—á–∞–µ–º –æ–ø—Ü–∏—é –ø–µ—á–∞—Ç–∏ –±–æ—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–∞–∫ –±—É–¥—Ç–æ –ø–µ—á–∞—Ç–∞–µ—Ç –∂–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫
    await bot.send_chat_action(m.chat.id, ChatActions.TYPING)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    for idx, title, body, image, price, tag in products:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ –∫–∞—Ä—Ç–æ—á–∫–µ —Ç–æ–≤–∞—Ä–∞
        text = f'<b>{title}</b>\n\n{body}\n\n–¶–µ–Ω–∞: {price} —Ä—É–±–ª–µ–π.'

        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        markup = InlineKeyboardMarkup()
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –Ω–µ–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π ¬´–∫–æ–ª–ª–±–µ–∫¬ª
        markup.add(InlineKeyboardButton(
            'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å',
            callback_data=product_cb.new(id=idx, action='delete')))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –≥–¥–µ –≤—ã–≤–æ–¥–∏–º —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –∏ —Ä–∞–Ω–µ–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        await m.answer_photo(photo=image,
                             caption=text,
                             reply_markup=markup)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    markup = ReplyKeyboardMarkup()
    markup.add(add_product)
    markup.add(delete_category)

    # –í—ã–≤–æ–¥–∏–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
    await m.answer('–•–æ—Ç–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å?',
                   reply_markup=markup)


@dp.callback_query_handler(IsAdmin(), category_cb.filter(action='view'))
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
async def category_callback_handler(query: CallbackQuery, callback_data: dict,
                                    state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ action –≤ –∑–Ω–∞—á–µ–Ω–∏–µ view"""
    # –ò–∑ —Å–ª–æ–≤–∞—Ä—è —Å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    category_idx = callback_data['id']

    # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –µ–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∫–∞—Ç–æ—Ä—É
    products = db.fetchall('''SELECT * FROM products product
    WHERE product.tag = (SELECT title FROM categories WHERE idx=?)''',
                           (category_idx,))

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    await query.message.delete()
    # –í—ã–≤–æ–¥–∏–º –Ω–æ–≤–æ–µ
    await query.answer('–í—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –≤ —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é.')
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—ä–µ–∫—Ç–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–æ–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º ‚Äì –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –≠—Ç–æ –±—É–¥–µ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å–ª–æ–≤–∞—Ä—è
    await state.update_data(category_index=category_idx)
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –∏ –¥–æ–ª–∂–Ω–∞ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –≤—ã–≤–æ–¥ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    await show_products(query.message, products, category_idx)


@dp.message_handler(IsAdmin(), text=delete_category)
async def delete_category_handler(message: Message, state: FSMContext):
    """"–û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —É–¥–∞–ª—è–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    # –û–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è state –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–æ–ª—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ –î–∂–∞–Ω–≥–æ. –ú—ã –º–æ–∂–µ–º –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞,
    # –∏–∑–≤–ª–µ—á—å –Ω—É–∂–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –¥–∞–ª—å—à–µ –≤ –∫–æ–¥–µ.
    # –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤—ã—à–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç –º–µ—Ç–æ–¥–æ–º proxy() –æ–±—ä–µ–∫—Ç–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    # –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è.
    async with state.proxy() as data:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ –∫–ª—é—á—É –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        if 'category_index' in data.keys():
            idx = data['category_index']

            # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∏ —É–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            db.query(
                'DELETE FROM products WHERE tag IN (SELECT '
                'title FROM categories WHERE idx=?)',
                (idx,))
            db.query('DELETE FROM categories WHERE idx=?', (idx,))

            # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´–ì–æ—Ç–æ–≤–æ¬ª
            await message.answer('–ì–æ—Ç–æ–≤–æ!', reply_markup=ReplyKeyboardRemove())
            # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            await process_settings(message)


@dp.message_handler(IsAdmin(), text=add_product)
async def process_add_product(message: Message):
    """"–û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä"""
    await ProductState.title.set()

    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(cancel_message)

    await message.answer('–ù–∞–∑–≤–∞–Ω–∏–µ?', reply_markup=markup)


@dp.message_handler(IsAdmin(), text=cancel_message, state=ProductState.title)
async def process_cancel(message: Message, state: FSMContext):
    """"–û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–º–µ–Ω—è–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"""
    await message.answer('–û–∫, –æ—Ç–º–µ–Ω–µ–Ω–æ!', reply_markup=ReplyKeyboardRemove())
    await state.finish()

    await process_settings(message)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è title, —Ç.–µ. –∫–æ–≥–¥–∞ –º—ã –≤–≤–µ–¥–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
@dp.message_handler(IsAdmin(), state=ProductState.title)
async def process_title(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è"""

    # –ü–µ—Ä–µ–¥–∞–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    async with state.proxy() as data:
        data['title'] = message.text

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é, –≥–¥–µ –Ω–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤–≤–µ—Å—Ç–∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    await ProductState.next()
    # reply_markup=back_markup() - —á—Ç–æ–±—ã –º–æ–≥–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
    await message.answer('–û–ø–∏—Å–∞–Ω–∏–µ?', reply_markup=back_markup())


# def back_markup():
#     """–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–Ω—é"""
#     markup = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
#     markup.add(back_message)
#
#     return markup


@dp.message_handler(IsAdmin(), text=back_message, state=ProductState.title)
async def process_title_back(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞"""
    await process_add_product(message)


@dp.message_handler(IsAdmin(), text=back_message, state=ProductState.body)
async def process_body_back(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞ —ç—Ç–∞–ø–µ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è (–æ–±—ä–µ–∫—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è body)"""
    await ProductState.title.set()

    async with state.proxy() as data:
        await message.answer(f"–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å <b>{data['title']}</b>?",
                             reply_markup=back_markup())


@dp.message_handler(IsAdmin(), state=ProductState.body)
async def process_body(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ –ø–æ—Å–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è"""
    async with state.proxy() as data:
        # –î–æ–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–æ–≤–∞—Ä–∞
        data['body'] = message.text

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∞—Ç—Ä–∏–±—É—Ç—É-—Å–æ—Å—Ç–æ—è–Ω–∏—é –∫–ª–∞—Å—Å–∞ ProductState. –≠—Ç–æ –∞—Ç—Ä–∏–±—É—Ç image
    await ProductState.next()
    await message.answer('–§–æ—Ç–æ?', reply_markup=back_markup())


@dp.message_handler(IsAdmin(), content_types=ContentType.PHOTO,
                    state=ProductState.image)
async def process_image_photo(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —É–∫–∞–∑–∞–Ω–∏—é —Ü–µ–Ω—ã –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ"""

    # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–≥–æ —Ñ–æ—Ç–æ
    fileID = message.photo[-1].file_id
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ñ–æ—Ç–æ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É
    file_info = await bot.get_file(fileID)
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–æ—Ç–æ
    downloaded_file = (await bot.download_file(file_info.file_path)).read()

    # –ü–æ–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    async with state.proxy() as data:
        data['image'] = downloaded_file

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await ProductState.next()
    await message.answer('–¶–µ–Ω–∞?', reply_markup=back_markup())


@dp.message_handler(IsAdmin(), lambda message: message.text.isdigit(),
                    state=ProductState.price)
async def process_price(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã"""
    async with state.proxy() as data:
        data['price'] = message.text

        title = data['title']
        body = data['body']
        price = data['price']

        await ProductState.next()
        text = f'<b>{title}</b>\n\n{body}\n\n–¶–µ–Ω–∞: {price} —Ä—É–±–ª–µ–π.'

        markup = check_markup()

        await message.answer_photo(photo=data['image'],
                                   caption=text,
                                   reply_markup=markup)


# def check_markup():
#     """–§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥"""
#     markup = ReplyKeyboardMarkup(resize_keyboard=True, selective=True)
#     markup.row(back_message, all_right_message)
#
#     return markup


@dp.message_handler(IsAdmin(), text=all_right_message,
                    state=ProductState.confirm)
async def process_confirm(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞"""
    async with state.proxy() as data:
        # –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        title = data['title']
        body = data['body']
        image = data['image']
        price = data['price']

        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ –µ–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é tag
        tag = db.fetchone(
            'SELECT title FROM categories WHERE idx=?',
            (data['category_index'],))[0]

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ —Ö–µ—à–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ç–æ–≤–∞—Ä–∞, —á—Ç–æ–±—ã –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—å –∏—Ö –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ
        idx = md5(' '.join([title, body, price, tag]
                           ).encode('utf-8')).hexdigest()

        # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å—Ç–∞–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db.query('INSERT INTO products VALUES (?, ?, ?, ?, ?, ?)',
                 (idx, title, body, image, int(price), tag))

    # –í—ã–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –Ω–∞–¥–ø–∏—Å—å
    await state.finish()
    await message.answer('–ì–æ—Ç–æ–≤–æ!', reply_markup=ReplyKeyboardRemove())
    await process_settings(message)


@dp.callback_query_handler(IsAdmin(), product_cb.filter(action='delete'))
async def delete_product_callback_handler(query: CallbackQuery,
                                          callback_data: dict):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–π –º—ã –ø—Ä–∏–≤—è–∑–∞–ª–∏ –∫ –∫–Ω–æ–ø–∫–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –º–µ—Ç–æ–¥–µ show_products()"""
    product_idx = callback_data['id']
    db.query('DELETE FROM products WHERE idx=?', (product_idx,))
    await query.answer('–£–¥–∞–ª–µ–Ω–æ!')
    await query.message.delete()


# state=ProductState.confirm - –î–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
# (—Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äì confirm)
@dp.message_handler(IsAdmin(), text=back_message, state=ProductState.confirm)
async def process_confirm_back(message: Message, state: FSMContext):
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é —Ü–µ–Ω—ã"""
    # –í–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
    await ProductState.price.set()

    async with state.proxy() as data:
        # –¢.–∫. –º—ã –º–µ–Ω—è–µ–º —Ü–µ–Ω—É, –Ω–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ—ç—Ç–æ–º—É –æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ª–æ–≤–∞—Ä—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∑–∞
        # —Ç–µ–∫—É—â–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º —Ü–µ–Ω—ã
        await message.answer(f"–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É —Å <b>{data['price']}</b>?",
                             reply_markup=back_markup())


# –° —É–∫–∞–∑–∞–Ω–Ω—ã–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º —Ä–∞–±–æ—Ç–∞–µ–º, –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ, —Ç.–µ. –≤–∫–ª—é—á–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
@dp.message_handler(IsAdmin(), content_types=ContentType.TEXT,
                    state=ProductState.image)
async def process_image_url(message: Message, state: FSMContext):
    """–∫–æ–≥–¥–∞ –º—ã —Ö–æ—Ç–∏–º –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–ª–∏, –∫–æ–≥–¥–∞ –≤–º–µ—Å—Ç–æ —Ñ–æ—Ç–æ, –¥–æ–±–∞–≤–∏–ª–∏ —Ç–µ–∫—Å—Ç"""

    # –ï—Å–ª–∏ –Ω–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É ¬´–ù–∞–∑–∞–¥¬ª, –≤–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è (body)
    if message.text == back_message:

        await ProductState.body.set()

        async with state.proxy() as data:

            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
            await message.answer(f"–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Å <b>{data['body']}</b>?",
                                 reply_markup=back_markup())

    else:

        # –ï—Å–ª–∏ –≤–≤–æ–¥–∏–º –≤–º–µ—Å—Ç–æ —Ñ–æ—Ç–æ —Ç–µ–∫—Å—Ç
        await message.answer('–í–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞.')


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –µ—Å–ª–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ü–µ–Ω—ã –º—ã –≤–≤–µ–¥–µ–º –Ω–µ —á–∏—Å–ª–æ
@dp.message_handler(IsAdmin(), lambda message: not message.text.isdigit(),
                    state=ProductState.price)
async def process_price_invalid(message: Message, state: FSMContext):
    """–æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é —É–∫–∞–∑–∞–Ω–∏—è —Ü–µ–Ω—ã –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–æ–≤–æ–º"""

    # –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –∑–∞–º–µ–Ω–µ —Ñ–æ—Ç–æ
    if message.text == back_message:

        await ProductState.image.set()

        async with state.proxy() as data:

            await message.answer("–î—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ?",
                                 reply_markup=back_markup())

    else:

        await message.answer('–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞!')


@dp.message_handler(IsAdmin(),
                    lambda message: message.text not in [back_message, all_right_message],
                    state=ProductState.confirm)
async def process_confirm_invalid(message: Message, state: FSMContext):
    """–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–º–µ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ–Ω—Ü–µ –∏–ª–∏ –æ—Ç–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–ø–∏—à–µ—Ç –∫–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç"""
    await message.answer('–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ –±—ã–ª–æ.')
